// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"tasksvc/config"
	"tasksvc/delivery/http"
	"tasksvc/middleware"
	impl3 "tasksvc/repository/client/impl"
	"tasksvc/repository/mysqlrepo/impl"
	impl2 "tasksvc/service/impl"
	"tasksvc/utils"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func InitDependency(config2 *config.StartupConfig) (*App, error) {
	taskDB, err := newCfAdminMysqlDbConnection(config2)
	if err != nil {
		return nil, err
	}
	taskMySQLRepo := impl.NewTaskMySQLRepo(taskDB)
	taskService := impl2.NewTaskService(taskMySQLRepo)
	taskHandler := http.NewTaskHandler(taskService)
	httpClient := utils.NewHttpClient()
	userServiceClient := impl3.NewUserServiceClient(httpClient, config2)
	taskMiddleware := middleware.NewUserMiddleware(userServiceClient, config2)
	echo, err := newRouter(taskHandler, taskMiddleware)
	if err != nil {
		return nil, err
	}
	app := newApp(config2, echo)
	return app, nil
}
